// Code generated by go-swagger; DO NOT EDIT.

package ad_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAdsParams creates a new GetAdsParams object
// with the default values initialized.
func NewGetAdsParams() *GetAdsParams {
	var ()
	return &GetAdsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAdsParamsWithTimeout creates a new GetAdsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAdsParamsWithTimeout(timeout time.Duration) *GetAdsParams {
	var ()
	return &GetAdsParams{

		timeout: timeout,
	}
}

// NewGetAdsParamsWithContext creates a new GetAdsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAdsParamsWithContext(ctx context.Context) *GetAdsParams {
	var ()
	return &GetAdsParams{

		Context: ctx,
	}
}

// NewGetAdsParamsWithHTTPClient creates a new GetAdsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAdsParamsWithHTTPClient(client *http.Client) *GetAdsParams {
	var ()
	return &GetAdsParams{
		HTTPClient: client,
	}
}

/*GetAdsParams contains all the parameters to send to the API endpoint
for the get ads operation typically these are written to a http.Request
*/
type GetAdsParams struct {

	/*ContextKeys
	  List of important key words from the current page describing the context.

	*/
	ContextKeys []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get ads params
func (o *GetAdsParams) WithTimeout(timeout time.Duration) *GetAdsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ads params
func (o *GetAdsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ads params
func (o *GetAdsParams) WithContext(ctx context.Context) *GetAdsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ads params
func (o *GetAdsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ads params
func (o *GetAdsParams) WithHTTPClient(client *http.Client) *GetAdsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ads params
func (o *GetAdsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContextKeys adds the contextKeys to the get ads params
func (o *GetAdsParams) WithContextKeys(contextKeys []string) *GetAdsParams {
	o.SetContextKeys(contextKeys)
	return o
}

// SetContextKeys adds the contextKeys to the get ads params
func (o *GetAdsParams) SetContextKeys(contextKeys []string) {
	o.ContextKeys = contextKeys
}

// WriteToRequest writes these params to a swagger request
func (o *GetAdsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesContextKeys := o.ContextKeys

	joinedContextKeys := swag.JoinByFormat(valuesContextKeys, "")
	// query array param context_keys
	if err := r.SetQueryParam("context_keys", joinedContextKeys...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
