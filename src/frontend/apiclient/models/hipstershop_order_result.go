// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HipstershopOrderResult hipstershop order result
// swagger:model hipstershopOrderResult
type HipstershopOrderResult struct {

	// items
	Items []*HipstershopOrderItem `json:"items"`

	// order id
	OrderID string `json:"order_id,omitempty"`

	// shipping address
	ShippingAddress *HipstershopAddress `json:"shipping_address,omitempty"`

	// shipping cost
	ShippingCost *HipstershopMoney `json:"shipping_cost,omitempty"`

	// shipping tracking id
	ShippingTrackingID string `json:"shipping_tracking_id,omitempty"`
}

// Validate validates this hipstershop order result
func (m *HipstershopOrderResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShippingCost(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HipstershopOrderResult) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(m.Items) { // not required
		return nil
	}

	for i := 0; i < len(m.Items); i++ {
		if swag.IsZero(m.Items[i]) { // not required
			continue
		}

		if m.Items[i] != nil {
			if err := m.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HipstershopOrderResult) validateShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddress) { // not required
		return nil
	}

	if m.ShippingAddress != nil {
		if err := m.ShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipping_address")
			}
			return err
		}
	}

	return nil
}

func (m *HipstershopOrderResult) validateShippingCost(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingCost) { // not required
		return nil
	}

	if m.ShippingCost != nil {
		if err := m.ShippingCost.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipping_cost")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HipstershopOrderResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HipstershopOrderResult) UnmarshalBinary(b []byte) error {
	var res HipstershopOrderResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
